(deftype (Buffer a)
  (struct (: rem Int)
          (: size Int)
          (: data a)))

(: buf_create (-> Buffer Int))
(defun (buf_create size)
  (def Buffer buf)
  (set buf.rem (- size 1))
  (set buf.size size)
  (set buf.data (malloc (* buf.size (sizeof char))))
  (set buf.data[0] '\0')
  buf)

(: buf_grow (-> void Buffer*))
(defun (buf_grow buf)
  (set buf->rem (+ buf->rem buf->size))
  (def char* data (malloc (* buf->size (* 2 (sizeof char)))))
  (memcpy data buf->data buf->size)
  (free buf->data)
  (set buf->size (* 2 buf->size))
  (set buf->data data)
  void)

; (int len (strlen str))
(: append-n (-> void Buffer* char* int))
(defun (append-n buf str len)
  (if (gt len buf->rem)
    (progn
      (buf_grow buf)
      (buf_write buf str))
    (progn
      (strncat buf->data str (- buf->rem 1))
      (set buf->rem (- buf->rem len))))
  void)

(: append (-> void Buffer* char))
(defun (append buf c)
  (if (lte buf->rem 0)
    (buf_grow buf))
  (set buf->data[buf->size-1-buf->rem--] c)
  (set buf->data[buf->size-1-buf->rem] '\0')
  void)
